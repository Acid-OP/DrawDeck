# Use Node.js 20 on Alpine as the base image for smaller size
FROM node:20-alpine AS base

# Install pnpm and turbo globally
RUN npm install -g pnpm turbo

# Set working directory inside container
WORKDIR /usr/src/app

# Define build arguments for Clerk authentication keys
ARG NEXT_PUBLIC_WS_URL
ARG NEXT_PUBLIC_RTC_URL
ARG NEXT_PUBLIC_SUPABASE_URL
ARG NEXT_PUBLIC_SUPABASE_ANON_KEY

# Copy monorepo packages and essential files for dependency installation
COPY ./packages ./packages
COPY ./package.json ./package.json
COPY ./pnpm-lock.yaml ./pnpm-lock.yaml
COPY ./pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY ./turbo.json ./turbo.json
COPY ./apps/excalidraw-front-end ./apps/excalidraw-front-end

# Install all dependencies using frozen lockfile to ensure consistent installs
RUN pnpm install --frozen-lockfile

# Set environment variables inside the container
ENV NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
ENV NEXT_PUBLIC_RTC_URL=${NEXT_PUBLIC_RTC_URL}
ENV NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
ENV NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}

# Move to the frontend app directory
WORKDIR /usr/src/app/apps/excalidraw-front-end

# Create the .env.local file required for Next.js using the build args
RUN echo "NEXT_PUBLIC_WS_URL=$NEXT_PUBLIC_WS_URL" >> .env.local
RUN echo "NEXT_PUBLIC_RTC_URL=$NEXT_PUBLIC_RTC_URL" >> .env.local
RUN echo "NEXT_PUBLIC_SUPABASE_URL=$NEXT_PUBLIC_SUPABASE_URL" >> .env.local
RUN echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=$NEXT_PUBLIC_SUPABASE_ANON_KEY" >> .env.local
# Return to the root of the monorepo
WORKDIR /usr/src/app

# Build the application using the monorepo build setup
RUN pnpm run build

# Expose the port the app will run on
EXPOSE 3000

# Start the frontend client
CMD ["pnpm","run","start:client"]